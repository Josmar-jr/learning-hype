import Head from "next/head";
import * as Dialog from "@radix-ui/react-dialog";

import { signIn } from "next-auth/react";
import { Button } from "~/components/Form/Button";
import { Fingerprint, GithubLogo } from "phosphor-react";
import type { GetServerSideProps } from "next";
import { trpc } from "~/utils/trpc";

export default function Home() {
  const { data: courses } = trpc.useQuery(["course.getAll"]);
  console.log(courses);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mx-auto flex h-screen max-w-2xl flex-col items-center py-24 px-8 text-zinc-600">
        <Dialog.Root>
          <Dialog.Trigger asChild>
            <Button>Open modal</Button>
          </Dialog.Trigger>

          <Dialog.Overlay className="fixed inset-0 bg-[#050206] opacity-70" />

          <Dialog.Content className="fixed top-1/2 left-1/2 flex w-full max-w-xl -translate-x-1/2 -translate-y-1/2 flex-col items-center justify-center rounded-lg bg-gray-100 py-6 px-2 text-center">
            <span className="mb-8 rounded-full bg-gray-200 p-4 text-gray-100">
              <Fingerprint size={32} weight="bold" />
            </span>

            <Dialog.Title className="text-2xl font-bold">
              Tempo esgotado!
            </Dialog.Title>
            <Dialog.Description className="text-zinc-400">
              <p className="py-2 text-gray-800">
                Crie sua conta <strong>gratuitamente</strong> na plataforma para
                visualizar o relatório completo de testes e também:
              </p>

              <ul className="flex list-disc flex-col items-center text-left">
                <li>Salvar as questões que respondeu</li>
                <li>Ter um panorama geral de acertos e erros</li>
                <li>Emitir relátorio em formato PDF</li>
                <li>Receba feedbacks constantes para sua evolução</li>
              </ul>

              <p>
                Aprenda mais sobre uma das <strong>maiores bibliotecas</strong>{" "}
                e seu ecosistema, o React JS é construido para facilitar o
                desenvolvimento web front end, tanto no web e no mobile.
              </p>
            </Dialog.Description>

            <div className="flex gap-2">
              <Dialog.Trigger asChild>
                <Button className="mt-8 w-60" variant="outlined">
                  Cancelar
                </Button>
              </Dialog.Trigger>
              <Button
                className="mt-8 w-60"
                variant="secondary"
                onClick={() => signIn("github")}
              >
                <GithubLogo className="h-5 w-5" />
                Entrar com Github
              </Button>
            </div>
          </Dialog.Content>
        </Dialog.Root>

        <ul className="mt-4">
          {courses?.map((course) => (
            <li
              key={course.id}
              className="flex items-center gap-4 text-gray-400"
            >
              <img className="w-12" src={course.imageUrl} alt="Image course" />
              <div>
                <span className="text-lg font-semibold text-gray-800">
                  {course.title}
                </span>
                <div
                  className="max-w-sm text-sm leading-4"
                  dangerouslySetInnerHTML={{ __html: course.description }}
                />
              </div>
              <span className="text-sm">R$ 180,00</span>

              <div className="flex items-end gap-[2px]">
                <span className="h-2 w-1 bg-indigo-600 block rounded-sm" />
                <span className="h-3 w-1 bg-gray-200 block rounded-sm" />
                <span className="h-4 w-1 bg-gray-200 block rounded-sm" />
              </div>
            </li>
          ))}
        </ul>
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  return {
    props: {},
  };
};

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
